// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux(a=fb0, b=in[0], sel=load, out=mux0);
    DFF(in=mux0, out=fb0, out=out[0]);
    Mux(a=fb1, b=in[1], sel=load, out=mux1);
    DFF(in=mux1, out=fb1, out=out[1]);
    Mux(a=fb2, b=in[2], sel=load, out=mux2);
    DFF(in=mux2, out=fb2, out=out[2]);
    Mux(a=fb3, b=in[3], sel=load, out=mux3);
    DFF(in=mux3, out=fb3, out=out[3]);
    Mux(a=fb4, b=in[4], sel=load, out=mux4);
    DFF(in=mux4, out=fb4, out=out[4]);
    Mux(a=fb5, b=in[5], sel=load, out=mux5);
    DFF(in=mux5, out=fb5, out=out[5]);
    Mux(a=fb6, b=in[6], sel=load, out=mux6);
    DFF(in=mux6, out=fb6, out=out[6]);
    Mux(a=fb7, b=in[7], sel=load, out=mux7);
    DFF(in=mux7, out=fb7, out=out[7]);
    Mux(a=fb8, b=in[8], sel=load, out=mux8);
    DFF(in=mux8, out=fb8, out=out[8]);
    Mux(a=fb9, b=in[9], sel=load, out=mux9);
    DFF(in=mux9, out=fb9, out=out[9]);
    Mux(a=fb10, b=in[10], sel=load, out=mux10);
    DFF(in=mux10, out=fb10, out=out[10]);
    Mux(a=fb11, b=in[11], sel=load, out=mux11);
    DFF(in=mux11, out=fb11, out=out[11]);
    Mux(a=fb12, b=in[12], sel=load, out=mux12);
    DFF(in=mux12, out=fb12, out=out[12]);
    Mux(a=fb13, b=in[13], sel=load, out=mux13);
    DFF(in=mux13, out=fb13, out=out[13]);
    Mux(a=fb14, b=in[14], sel=load, out=mux14);
    DFF(in=mux14, out=fb14, out=out[14]);
    Mux(a=fb15, b=in[15], sel=load, out=mux15);
    DFF(in=mux15, out=fb15, out=out[15]);
}
